#!/usr/bin/env bash
#
# Description:
#   This script can be used to copy one or more files from an s3 bucket to a destination path. Run `--help` for more information.
#
# Assumptions:
#   - Gemfast is installed
#
set -eo pipefail

function main() {
  if [[ $# -ne 1 ]]; then
    help
    log "ERROR" "must provide an action"
    exit 1
  fi
  local action=$1
  case "${action}" in
    start|restart)
      reconfigure
      ensure-runsvdir
      /opt/gemfast/embedded/bin/sv ${action} "caddy"
      /opt/gemfast/embedded/bin/sv ${action} "gemfast"
      ;;
    status|stop|force-restart|kill)
      /opt/gemfast/embedded/bin/sv ${action} "caddy"
      /opt/gemfast/embedded/bin/sv ${action} "gemfast"
      ;;
    --help|help)
      help
      ;;
    *)
      help
      log "ERROR" "unknown action: '${action}'"
      ;;
  esac
}

#
# Create the makerun-runsvdir and make sure runsvdir is started 
#
function ensure-runsvdir() {
  if [ ! -f /etc/cron.d/makerun-runsvdir ]; then
    echo "*/2 * * * * $(whoami) /opt/gemfast/embedded/bin/makerun" > /etc/cron.d/makerun-runsvdir
  fi
  if ps ax | grep -v grep | grep "runsvdir" > /dev/null; then
    return
  else
    /opt/gemfast/embedded/bin/runsvdir-start &
  fi
  
}

#
# Wrapper to sv command
#
function reconfigure() {
  . /etc/gemfast/.env
  export GEMFAST_HOST="${GEMFAST_HOST:-localhost}"
  export GEMFAST_PORT="${GEMFAST_PORT:-8887}"
  gomplate -i /opt/gemfast/embedded/etc/

}

#
# Print help text
#
function help() {
    echo "Usage: gemfast-ctl [action]"
    echo
    echo "Summary:"
    echo "Issue service commands to a gemfast server."
    echo "This script assumes that gemfast is already installed on the system and that the destination path is \"/opt/gemfast\"."
    echo
    echo
    echo "Actions:"
    echo "status:"
    echo "  Report the current status of gemfast services."
    echo "up:"
    echo "  If gemfast services are not running, start them."
    echo "down:"
    echo "  If gemfast services are running, stop them."
    echo "restart:"
    echo "  If gemfast services are running, stop them and start them. If gemfast services are not running, start them."
    echo "force-restart:"
    echo "  If gemfast services are running, stop them and start them. If gemfast services are not running, start them. Send the KILL signal if the timeout is reached."
    echo "kill:"
    echo "  If gemfast services are running, send them the KILL signal."
    echo
}

#
# Emit a message to the console
#
function log() {
    local message="${2}"
    local level="${1:-INFO}"
    printf "%s - %s\n" "${level}" "${message}"
}

main "$@"